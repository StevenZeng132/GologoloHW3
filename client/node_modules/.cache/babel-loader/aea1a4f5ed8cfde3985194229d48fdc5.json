{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\aweso\\\\Desktop\\\\HW3\\\\gologolo_hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\aweso\\\\Desktop\\\\HW3\\\\gologolo_hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aweso\\\\Desktop\\\\HW3\\\\gologolo_hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aweso\\\\Desktop\\\\HW3\\\\gologolo_hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\aweso\\\\Desktop\\\\HW3\\\\gologolo_hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\aweso\\\\Desktop\\\\HW3\\\\gologolo_hw3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\aweso\\\\Desktop\\\\HW3\\\\gologolo_hw3\\\\client\\\\src\\\\components\\\\EditLogoScreen.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation updateLogo(\\n        $id: String!,\\n        $text: String!,\\n        $color: String!,\\n        $fontSize: Int!,\\n        $backgroundColor: String!,\\n        $borderColor: String!,\\n        $borderWidth: Int!,\\n        $borderRadius: Int!,\\n        $padding: Int!,\\n        $margin: Int!) {\\n            updateLogo(\\n                id: $id,\\n                text: $text,\\n                color: $color,\\n                fontSize: $fontSize,\\n                backgroundColor: $backgroundColor,\\n                borderColor: $borderColor,\\n                borderWidth: $borderWidth,\\n                borderRadius: $borderRadius,\\n                padding: $padding,\\n                margin: $margin) {\\n                    lastUpdate\\n                }\\n        }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query logo($logoId: String) {\\n        logo(id: $logoId) {\\n            _id\\n            text\\n            color\\n            fontSize\\n            backgroundColor\\n            borderColor\\n            borderWidth\\n            borderRadius\\n            padding\\n            margin\\n\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport gql from \"graphql-tag\";\nimport { Query, Mutation } from \"react-apollo\";\nimport { noSubselectionAllowedMessage } from 'graphql/validation/rules/ScalarLeafs';\nvar GET_LOGO = gql(_templateObject());\nvar UPDATE_LOGO = gql(_templateObject2());\n\nvar EditLogoScreen = /*#__PURE__*/function (_Component) {\n  _inherits(EditLogoScreen, _Component);\n\n  function EditLogoScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditLogoScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditLogoScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      id: null,\n      text: null,\n      color: null,\n      fontSize: null,\n      backgrounColor: null,\n      borderColor: null,\n      borderWidth: null,\n      borderRadius: null,\n      padding: null,\n      margin: null\n    };\n    return _this;\n  }\n\n  _createClass(EditLogoScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var text, color, fontSize, backgroundColor, borderColor, borderWidth, borderRadius, padding, margin;\n      return /*#__PURE__*/React.createElement(Query, {\n        query: GET_LOGO,\n        variables: {\n          logoId: this.props.match.params.id\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }\n      }, \" \", function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return 'Loading...';\n        if (error) return \"Error! \".concat(error.message);\n        return /*#__PURE__*/React.createElement(Mutation, {\n          mutation: UPDATE_LOGO,\n          key: data.logo._id,\n          onCompleted: function onCompleted() {\n            return _this2.props.history.push(\"/\");\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 38\n          }\n        }, \" \", function (updateLogo, _ref2) {\n          var loading = _ref2.loading,\n              error = _ref2.error;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"container\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 45\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"panel panel-default\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"panel-heading\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"h4\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 41\n            }\n          }, \" \", /*#__PURE__*/React.createElement(Link, {\n            to: \"/\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 46\n            }\n          }, \" Home \")), /*#__PURE__*/React.createElement(\"h3\", {\n            className: \"panel-title\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 41\n            }\n          }, \"Edit Logo \"), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n            className: \"panel-body\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 47\n            }\n          }, /*#__PURE__*/React.createElement(\"form\", {\n            onSubmit: function onSubmit(e) {\n              e.preventDefault();\n              updateLogo({\n                variables: {\n                  id: data.logo._id,\n                  text: text.value,\n                  color: color.value,\n                  fontSize: parseInt(fontSize.value),\n                  backgroundColor: backgroundColor.value,\n                  borderColor: borderColor.value,\n                  borderRadius: parseInt(borderRadius.value),\n                  borderWidth: parseInt(borderWidth.value),\n                  padding: parseInt(padding.value),\n                  margin: parseInt(margin.value)\n                }\n              });\n              text.value = \"\";\n              color.value = \"\";\n              fontSize.value = \"\";\n              backgroundColor.value = \"\";\n              borderColor.value = \"\";\n              borderRadius.value = \"\";\n              borderWidth.value = \"\";\n              padding = \"\";\n              margin = \"\";\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"text\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 41\n            }\n          }, \" Text: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"text\",\n            ref: function ref(node) {\n              text = node;\n            },\n            placeholder: \"Text\",\n            defaultValue: data.logo.text,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 82\n            }\n          }), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 47\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"color\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 41\n            }\n          }, \" Color: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"color\",\n            className: \"form-control\",\n            name: \"color\",\n            ref: function ref(node) {\n              color = node;\n            },\n            placeholder: \"Color\",\n            defaultValue: data.logo.color,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 84\n            }\n          }), \" \"), \" \", /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 47\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"fontSize\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 41\n            }\n          }, \" Font Size: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"fontSize\",\n            ref: function ref(node) {\n              fontSize = node;\n            },\n            placeholder: \"Font Size\",\n            defaultValue: data.logo.fontSize,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 91\n            }\n          }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"backgrounColor\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 41\n            }\n          }, \" Background Color: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"color\",\n            className: \"form-control\",\n            name: \"backgroundColor\",\n            ref: function ref(node) {\n              backgroundColor = node;\n            },\n            placeholder: \"Background Color\",\n            defaultValue: data.logo.backgroundColor,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 104\n            }\n          }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"borderColor\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }\n          }, \" Border Color: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"color\",\n            className: \"form-control\",\n            name: \"borderColor\",\n            ref: function ref(node) {\n              borderColor = node;\n            },\n            placeholder: \"Border Color\",\n            defaultValue: data.logo.borderColor,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 97\n            }\n          }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"borderRadius\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 41\n            }\n          }, \" Border Radius: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"borderRadius\",\n            ref: function ref(node) {\n              borderRadius = node;\n            },\n            placeholder: \"Border Radius\",\n            defaultValue: data.logo.borderRadius,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 99\n            }\n          }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"borderWidth\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 41\n            }\n          }, \" Border Width: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"borderWidth\",\n            ref: function ref(node) {\n              borderWidth = node;\n            },\n            placeholder: \"Border Width\",\n            defaultValue: data.logo.borderWidth,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 97\n            }\n          }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"padding\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 41\n            }\n          }, \" Padding: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"padding\",\n            ref: function ref(node) {\n              padding = node;\n            },\n            placeholder: \"Padding\",\n            defaultValue: data.logo.padding,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 88\n            }\n          }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"form-group\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(\"label\", {\n            htmlFor: \"margin\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 41\n            }\n          }, \" Margin: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"margin\",\n            ref: function ref(node) {\n              margin = node;\n            },\n            placeholder: \"Margin\",\n            defaultValue: data.logo.margin,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 86\n            }\n          }), \" \"), /*#__PURE__*/React.createElement(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 41\n            }\n          }, \" Submit \"), \" \"), \" \", loading && /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 56\n            }\n          }, \" Loading... \"), \" \", error && /*#__PURE__*/React.createElement(\"p\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 62\n            }\n          }, \" Error: (Please try again \"), \" \"), \" \"), \" \");\n        }, \" \");\n      }, \" \");\n    }\n  }]);\n\n  return EditLogoScreen;\n}(Component);\n\nexport default EditLogoScreen;","map":{"version":3,"sources":["C:/Users/aweso/Desktop/HW3/gologolo_hw3/client/src/components/EditLogoScreen.js"],"names":["React","Component","Link","gql","Query","Mutation","noSubselectionAllowedMessage","GET_LOGO","UPDATE_LOGO","EditLogoScreen","state","id","text","color","fontSize","backgrounColor","borderColor","borderWidth","borderRadius","padding","margin","backgroundColor","logoId","props","match","params","loading","error","data","message","logo","_id","history","push","updateLogo","e","preventDefault","variables","value","parseInt","node"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\nimport gql from \"graphql-tag\";\r\nimport {\r\n    Query,\r\n    Mutation\r\n} from \"react-apollo\";\r\nimport {\r\n    noSubselectionAllowedMessage\r\n} from 'graphql/validation/rules/ScalarLeafs';\r\n\r\nconst GET_LOGO = gql `\r\n    query logo($logoId: String) {\r\n        logo(id: $logoId) {\r\n            _id\r\n            text\r\n            color\r\n            fontSize\r\n            backgroundColor\r\n            borderColor\r\n            borderWidth\r\n            borderRadius\r\n            padding\r\n            margin\r\n\r\n        }\r\n    }\r\n`;\r\n\r\nconst UPDATE_LOGO = gql `\r\n    mutation updateLogo(\r\n        $id: String!,\r\n        $text: String!,\r\n        $color: String!,\r\n        $fontSize: Int!,\r\n        $backgroundColor: String!,\r\n        $borderColor: String!,\r\n        $borderWidth: Int!,\r\n        $borderRadius: Int!,\r\n        $padding: Int!,\r\n        $margin: Int!) {\r\n            updateLogo(\r\n                id: $id,\r\n                text: $text,\r\n                color: $color,\r\n                fontSize: $fontSize,\r\n                backgroundColor: $backgroundColor,\r\n                borderColor: $borderColor,\r\n                borderWidth: $borderWidth,\r\n                borderRadius: $borderRadius,\r\n                padding: $padding,\r\n                margin: $margin) {\r\n                    lastUpdate\r\n                }\r\n        }\r\n`;\r\n\r\nclass EditLogoScreen extends Component {\r\n\r\n    state = {\r\n        id: null,\r\n        text: null,\r\n        color: null,\r\n        fontSize: null,\r\n        backgrounColor: null,\r\n        borderColor: null,\r\n        borderWidth: null,\r\n        borderRadius: null,\r\n        padding: null,\r\n        margin: null\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n            let text, color, fontSize, backgroundColor, borderColor, borderWidth, borderRadius, padding, margin;\r\n            return ( <\r\n                    Query query = {\r\n                        GET_LOGO\r\n                    }\r\n                    variables = {\r\n                        {\r\n                            logoId: this.props.match.params.id\r\n                        }\r\n                    } > {\r\n                        ({\r\n                            loading,\r\n                            error,\r\n                            data\r\n                        }) => {\r\n                            if (loading) return 'Loading...';\r\n                            if (error) return `Error! ${error.message}`;\r\n\r\n                            return ( <\r\n                                Mutation mutation = {\r\n                                    UPDATE_LOGO\r\n                                }\r\n                                key = {\r\n                                    data.logo._id\r\n                                }\r\n                                onCompleted = {\r\n                                    () => this.props.history.push(`/`)\r\n                                } > {\r\n                                    (updateLogo, {\r\n                                        loading,\r\n                                        error\r\n                                    }) => ( <\r\n                                        div className = \"container\" >\r\n                                        <\r\n                                        div className = \"panel panel-default\" >\r\n                                        <\r\n                                        div className = \"panel-heading\" >\r\n                                        <\r\n                                        h4 > < Link to = \"/\" > Home < /Link></h4 >\r\n                                        <\r\n                                        h3 className = \"panel-title\" >\r\n                                        Edit Logo <\r\n                                        /h3> <\r\n                                        /div> <\r\n                                        div className = \"panel-body\" >\r\n                                        <\r\n                                        form onSubmit = {\r\n                                            e => {\r\n                                                e.preventDefault();\r\n                                                updateLogo({\r\n                                                    variables: {\r\n                                                        id: data.logo._id,\r\n                                                        text: text.value,\r\n                                                        color: color.value,\r\n                                                        fontSize: parseInt(fontSize.value),\r\n                                                        backgroundColor: backgroundColor.value,\r\n                                                        borderColor: borderColor.value,\r\n                                                        borderRadius: parseInt(borderRadius.value),\r\n                                                        borderWidth: parseInt(borderWidth.value),\r\n                                                        padding: parseInt(padding.value),\r\n                                                        margin: parseInt(margin.value)\r\n                                                    }\r\n                                                });\r\n                                                text.value = \"\";\r\n                                                color.value = \"\";\r\n                                                fontSize.value = \"\";\r\n                                                backgroundColor.value = \"\";\r\n                                                borderColor.value = \"\";\r\n                                                borderRadius.value = \"\";\r\n                                                borderWidth.value = \"\";\r\n                                                padding = \"\";\r\n                                                margin = \"\";\r\n                                            }\r\n                                        } >\r\n                                        <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"text\" > Text: < /label> <\r\n                                        input type = \"text\"\r\n                                        className = \"form-control\"\r\n                                        name = \"text\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                text = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Text\"\r\n                                        defaultValue = {\r\n                                            data.logo.text\r\n                                        }\r\n                                        /> <\r\n                                        /div> <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"color\" > Color: < /label> <\r\n                                        input type = \"color\"\r\n                                        className = \"form-control\"\r\n                                        name = \"color\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                color = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Color\"\r\n                                        defaultValue = {\r\n                                            data.logo.color\r\n                                        }\r\n                                        /> <\r\n                                        /div> <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"fontSize\" > Font Size: < /label> <\r\n                                        input type = \"text\"\r\n                                        className = \"form-control\"\r\n                                        name = \"fontSize\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                fontSize = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Font Size\"\r\n                                        defaultValue = {\r\n                                            data.logo.fontSize\r\n                                        }\r\n                                        /> <\r\n                                        /div>\r\n\r\n                                        <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"backgrounColor\" > Background Color: < /label> <\r\n                                        input type = \"color\"\r\n                                        className = \"form-control\"\r\n                                        name = \"backgroundColor\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                backgroundColor = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Background Color\"\r\n                                        defaultValue = {\r\n                                            data.logo.backgroundColor\r\n                                        }\r\n                                        /> <\r\n                                        /div>\r\n\r\n                                        <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"borderColor\" > Border Color: < /label> <\r\n                                        input type = \"color\"\r\n                                        className = \"form-control\"\r\n                                        name = \"borderColor\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                borderColor = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Border Color\"\r\n                                        defaultValue = {\r\n                                            data.logo.borderColor\r\n                                        }\r\n                                        /> <\r\n                                        /div>\r\n\r\n                                        <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"borderRadius\" > Border Radius: < /label> <\r\n                                        input type = \"number\"\r\n                                        className = \"form-control\"\r\n                                        name = \"borderRadius\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                borderRadius = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Border Radius\"\r\n                                        defaultValue = {\r\n                                            data.logo.borderRadius\r\n                                        }\r\n                                        /> <\r\n                                        /div>\r\n\r\n                                        <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"borderWidth\" > Border Width: < /label> <\r\n                                        input type = \"number\"\r\n                                        className = \"form-control\"\r\n                                        name = \"borderWidth\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                borderWidth = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Border Width\"\r\n                                        defaultValue = {\r\n                                            data.logo.borderWidth\r\n                                        }\r\n                                        /> <\r\n                                        /div>\r\n\r\n                                        <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"padding\" > Padding: < /label> <\r\n                                        input type = \"number\"\r\n                                        className = \"form-control\"\r\n                                        name = \"padding\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                padding = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Padding\"\r\n                                        defaultValue = {\r\n                                            data.logo.padding\r\n                                        }\r\n                                        /> <\r\n                                        /div>\r\n\r\n                                        <\r\n                                        div className = \"form-group\" >\r\n                                        <\r\n                                        label htmlFor = \"margin\" > Margin: < /label> <\r\n                                        input type = \"number\"\r\n                                        className = \"form-control\"\r\n                                        name = \"margin\"\r\n                                        ref = {\r\n                                            node => {\r\n                                                margin = node;\r\n                                            }\r\n                                        }\r\n                                        placeholder = \"Margin\"\r\n                                        defaultValue = {\r\n                                            data.logo.margin\r\n                                        }\r\n                                        /> <\r\n                                        /div>\r\n\r\n\r\n\r\n                                        <\r\n                                        button type = \"submit\"\r\n                                        className = \"btn btn-success\" > Submit < /button> <\r\n                                        /form> {\r\n                                            loading && < p > Loading... < /p>} {\r\n                                                    error && < p > Error: (Please\r\n                                                        try again < /p>} <\r\n                                                        /div> <\r\n                                                        /div> <\r\n                                                        /div>\r\n                                                    )\r\n                                                } <\r\n                                                /Mutation>\r\n                                        );\r\n                                    }\r\n                                } <\r\n                                /Query>\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                    export default EditLogoScreen;"]},"metadata":{},"sourceType":"module"}